# Generated by Django 5.1.6 on 2025-05-12 20:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agents', '0002_remove_transaction_ativo_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('ticker', models.CharField(max_length=10, unique=True)),
                ('asset_type', models.CharField(choices=[('stock', 'Stock'), ('bond', 'Bond'), ('fund', 'Fund'), ('crypto', 'Cryptocurrency'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('volatility', models.FloatField(help_text='Annualized volatility (e.g., 0.2 for 20%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['ticker'], name='agents_asse_ticker_01dd2a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('total_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('langchain_model', models.CharField(default='gpt-4', help_text='Language model used by LangChain', max_length=100)),
                ('strategy', models.CharField(choices=[('risk_averse', 'Risk Averse'), ('balanced', 'Balanced'), ('growth', 'Growth')], max_length=50)),
                ('config', models.JSONField(default=dict, help_text='LangChain agent configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('users', models.ManyToManyField(related_name='investment_agents', to=settings.AUTH_USER_MODEL)),
                ('portfolios', models.ManyToManyField(related_name='investment_agents', to='agents.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='AdvisorRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recommendation_text', models.TextField()),
                ('risk_assessment', models.JSONField(default=dict, help_text='Risk analysis details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recommended_assets', models.ManyToManyField(blank=True, to='agents.asset')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.investmentagent')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='RiskProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('risk_level', models.CharField(choices=[('conservative', 'Conservative'), ('moderate', 'Moderate'), ('aggressive', 'Aggressive')], max_length=20)),
                ('max_loss_tolerance', models.FloatField(help_text='Max percentage loss tolerance (e.g., 0.1 for 10%)')),
                ('investment_horizon', models.IntegerField(help_text='Investment horizon in years')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='portfolio',
            name='risk_profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='agents.riskprofile'),
        ),
        migrations.CreateModel(
            name='PortfolioAllocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=15)),
                ('allocation_percentage', models.FloatField(help_text='Percentage of portfolio (e.g., 0.25 for 25%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.asset')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='agents.portfolio')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('allocation_percentage__gte', 0.0), ('allocation_percentage__lte', 1.0)), name='valid_allocation_percentage')],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=15)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('executed_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.asset')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='agents.portfolio')),
            ],
            options={
                'indexes': [models.Index(fields=['portfolio', 'executed_at'], name='agents_tran_portfol_df1ee7_idx')],
            },
        ),
    ]
